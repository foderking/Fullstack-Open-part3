{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["base","object","getPersons","axios","get","then","response","data","addPerson","person","post","deletePerson","id","delete","changePerson","put","Filter","props","value","onChange","event","search","target","AddPerson","submit","onSubmit","map","each","text","handler","type","Input","ShowPersons","button","filteredList","filter","name","number","EachPerson","onClick","Notification","message","class_","className","App","useState","persons","setPersons","newName","setNewName","no","setNo","setFilter","stateData","error","setError","classtype","setType","notify","setTimeout","useEffect","serve","personData","preventDefault","newPers","length","window","confirm","id_","find","catch","console","log","concat","toLowerCase","startsWith","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82d958a1.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst base = './api/persons'\n\nconst getPersons = () => {\n\tconst request = axios.get(base)\n\treturn request.then(response => response.data)\n}\n\nconst addPerson = (person) => {\n\tconst request = axios.post(base, person)\n\treturn request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n\tconst request = axios.delete(`${base}/${id}`)\n\treturn request.then(response => response.data)\n}\n\nconst changePerson = (id, data) => {\n\tconst request = axios.put(`${base}/${id}`, data)\n\treturn request.then(response => response.data)\n}\n\nconst object ={ getPersons, addPerson, deletePerson, changePerson}\nexport default object","import React, { useState, useEffect } from 'react'\nimport serve from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [no, setNo] = useState('')\n  const [filter, setFilter] = useState('')\n  const stateData = [['Name', newName, setNewName], ['Number', no, setNo]]\n  const [error, setError] = useState(false)\n  const [classtype, setType] = useState('')\n\n  const search = (value) => {\n    return value.name.toLowerCase().startsWith(filter.toLowerCase())      // finds names in phonebook that start with name stored in the \"filter\" state\n  }\n\n  const notify = (message, type) => {           // Function for the notification commponent\n    setError(message)\n    setType(type)\n    setTimeout(() => setError(false), 4000 )\n  }\n\n  const buttonSubmit = (id, name) => {              // Deletes entry specified by \"id\"\n    if (window.confirm(`Delete ${name}?`)) {\n      console.log(`id ${id} deleted`)\n\n      serve.deletePerson(id)\n        .then(response => {\n          serve.getPersons()\n            .then(personData => setPersons(personData))        \n        })\n        .catch(error => {\n          console.log(error.response.data)\n          notify(`${error}: Could not delete ${newName}`, \"error\")\n        })\n    }\n    notify(`Deleted ${name}`, \"success\")\n  }\n\n  const submitNew = (event) => {\n    event.preventDefault()\n\n    const newPers = {\n      name: newName,\n      number: no \n    }\n\n    if (persons.filter(each => each.name === newName).length) {           // Updates phonebook\n      if(window.confirm(`${newName} is already added to Phonebook, replace the old number with a new one?`)) {\n        const id_ = persons.find(each => each.name === newName).id     // id of entry to be updated\n\n        serve.changePerson(id_, newPers)\n          .then(response => {\n            setPersons(persons.map(each => each.id === id_ ? response : each))\n            notify(`Updated ${newName}`, \"success\")\n          })\n          .catch( error => {\n            notify(`${error}: Could not update ${newName}`, \"error\")\n            console.log(error.response.data)\n          })\n      } \n    } else {                    // Adds new entry for phonebook\n        serve.addPerson(newPers)\n          .then(response => {\n            console.log(\"POST:\", response)\n            setPersons(persons.concat(response))\n            notify(`Added ${newName}`, \"success\")\n          })\n          .catch(error => {\n            console.log(error.response.data)\n            notify(`${error}: Could not add ${newName}`, \"error\")\n          })\n    }\n  }\n\n  useEffect(\n    () => {\n      serve.getPersons()\n        .then(personData => setPersons(personData))\n    },\n  [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {error ? <Notification message={error} class_={classtype} /> : <></>}\n      <Filter value={filter} search={setFilter} />\n      <h2>Add a new</h2>    \n      <AddPerson data={stateData} submit={submitNew} />\n      <h2>Numbers</h2>\n      <ShowPersons data={persons} search={search} button={buttonSubmit}/>\n    </div>\n  )\n}\n\nconst Filter = (props) => \n  <div>\n    Filter shown with \n    <input \n      value={props.value} \n      onChange={\n        (event) => props.search(event.target.value)\n      }\n    />\n  </div>  \n\n\nconst AddPerson = ({data, submit}) => \n  <div>\n    <form onSubmit={submit}>\n      {data.map(\n        each => \n        <Input \n          key={each[0]} \n          text={each[0]} \n          value={each[1]} \n          handler={each[2]} \n        />\n      )}\n      <button type=\"submit\" >add</button>\n    </form>  \n  </div>\n\nconst Input = (props) => \n  <div>\n    {props.text}: \n    <input \n      value={props.value} \n      onChange={\n        (event) => props.handler(event.target.value)\n      } \n    />\n  </div>\n\n\nconst ShowPersons = ({data, search, button}) => {\n  const filteredList = data.filter(each => search(each))\n  return (\n    <div>\n    {\n      filteredList.map(\n        each => \n        <EachPerson \n          key={each.id} \n          id = {each.id}\n          name={each.name} \n          number={each.number} \n          button={button}\n        />\n      )\n    }\n    </div>    \n  )\n}\n\nconst EachPerson = ({name, number, id, button}) => {\n  return (\n    <div>\n      {name} {number}\n      <button onClick={() => button(id, name)}>\n        delete\n      </button>\n    </div>\n  )\n}\n\nconst Notification = ({ message, class_}) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={class_}>\n      {message}\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root')\n)"],"sourceRoot":""}